@inject NavigationManager NavigationManager
@using data_viewer.Pages

<Router AppAssembly="@typeof(Program).Assembly" PreferExactMatches="@true">
    <Found Context="routeData">
        @*<RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)"/> *@
        <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)"/>
    </Found>
      <NotFound>
        <CascadingAuthenticationState>
            <LayoutView Layout="@typeof(EmptyLayout)">
                <p>Sorry, there's nothing at this address.</p>
                <NotFound/>
            </LayoutView>
        </CascadingAuthenticationState>
    </NotFound>
</Router>

@code {

    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    private async Task LogUserAuthenticationState()
    {
        var authState = await authenticationStateTask;
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            Console.WriteLine($"User {user.Identity.Name} is authenticated.");
        }
        else
        {
            Console.WriteLine("User is NOT authenticated.");
        }
    }

    private void Redirection()
    {
        
    }
    
}